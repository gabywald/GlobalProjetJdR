%		iching.mf
% This font was designed by Alan M Stanier	( alan@essex.ac.uk ),
% at Essex University Computer Service, Colchester, Essex CO4 3EA. England.
% 
% If you make significant additions or improvements to the font,
% please email me an updated version
%
%
%
mg:=6.0;	% CHANGE THIS TO GET DIFFERENT SIZES OF FONT (font size = 10*mg pt)

mode_setup;
tracingtitles := 1;
xbrushsize#:=mg*1pt;
ybrushsize#:=mg*0.4pt;
xsmallbrushsize#:=mg*0.8pt;
ysmallbrushsize#:=mg*0.32pt;
xtinybrushsize#:=mg*0.6pt;
ytinybrushsize#:=mg*0.24pt;
pensize#:=mg*0.4pt;
thinpensize#:=mg*0.2pt;
height#:=mg*20pt#;
bigheight#:=mg*30pt#;
fullwidth#:=mg*18pt#;
narrowwidth#:=mg*10pt#;
biggerwidth#:=mg*14pt#;
thinwidth#:=mg*5pt#;
define_pixels(height,bigheight,fullwidth,narrowwidth,thinwidth,biggerwidth);

def getsquarepen = pickup pensquare scaled pensize# enddef;
def getroundpen = pickup pencircle scaled pensize# enddef;
def getthinpen = pickup pencircle scaled thinpensize# enddef;

def pentriangle = makepen((-0.5,0.5) -- (0,-0.5) -- (0.5,0.5) .. cycle) enddef;

def getbrush(expr a,b,c,d) =
l := (c-a)++(d-b);
if l <= 7: pickup pentriangle xscaled xtinybrushsize# yscaled ytinybrushsize# rotated angle(c-a,d-b)
elseif l <= 14: pickup pentriangle xscaled xsmallbrushsize# yscaled ysmallbrushsize# rotated angle(c-a,d-b)
else: pickup pentriangle xscaled xbrushsize# yscaled ybrushsize# rotated angle(c-a,d-b)
fi
enddef;

def solid(expr n) = draw(0,mg*n) -- (mg*60,mg*n);
		    fill (mg*60,mg*n) .. (mg*55,mg*(n+5)) --
		       (mg*50,mg*n) -- (mg*60,mg*n) .. cycle;
enddef;

def broken(expr n) = draw(0,mg*n) -- (mg*25,mg*n);
		     fill (mg*25,mg*n) .. (mg*20,mg*(n+5)) --
		        (mg*15,mg*n) -- (mg*25,mg*n) .. cycle;
		     draw (mg*35,mg*n) -- (mg*60,mg*n);
		     fill (mg*60,mg*n) .. (mg*55,mg*(n+5)) --
		        (mg*50,mg*n) -- (mg*60,mg*n) .. cycle;
enddef;

def definechar(expr code,name,a,b,c,d,e,f) =
	beginchar(code,fullwidth#,height#,0); name;
	  getsquarepen;
	  if a=1: solid(50) else: broken(50) fi;
	  if b=1: solid(40) else: broken(40) fi;
	  if c=1: solid(30) else: broken(30) fi;
	  if d=1: solid(20) else: broken(20) fi;
	  if e=1: solid(10) else: broken(10) fi;
	  if f=1: solid(0) else: broken(0) fi;
	endchar;
enddef;

def brush(expr a,b,c,d) =
getbrush(a,b,c,d);
draw (mg*(a+5),mg*b) -- (mg*(c+5),mg*d)
enddef;

beginchar(0,fullwidth#,height#,0); "yin-yang";
getroundpen;
draw (mg*25,0){right} .. (mg*50,mg*25){up} .. (mg*25,mg*50){left} .. (0,mg*25){down} .. (mg*25,0){right} .. cycle;
fill (mg*25,0){right} .. (mg*50,mg*25){up} .. (mg*25,mg*50){left} &
	flex((mg*25,mg*50),(mg*37.5,mg*37.5),(mg*12.5,mg*12.5),(mg*25,0)) .. cycle;
unfill (mg*25,mg*10){right} .. (mg*27.5,mg*12.5){up} .. (mg*25,mg*15){left} .. (mg*22.5,mg*12.5){down}
	.. (mg*25,mg*10){right} .. cycle;
fill (mg*25,mg*35){right} .. (mg*27.5,mg*37.5){up} .. (mg*25,mg*40){left} .. (mg*22.5,mg*37.5){down}
	.. (mg*25,mg*35){right} .. cycle;
endchar;
%
%
% Hexagrams
%
definechar(1,"ch'ien",1,1,1,1,1,1);
definechar(2,"k'un",0,0,0,0,0,0);
definechar(3,"chun",0,1,0,0,0,1);
definechar(4,"meng",1,0,0,0,1,0);
definechar(5,"hsu",0,1,0,1,1,1);
definechar(6,"sung",1,1,1,0,1,0);
definechar(7,"shih",0,0,0,0,1,0);
definechar(8,"pi",0,1,0,0,0,0);
definechar(9,"hsiao ch'u",1,1,0,1,1,1);
definechar(10,"li",1,1,1,0,1,1);
definechar(11,"t'ai",0,0,0,1,1,1);
definechar(12,"p'i",1,1,1,0,0,0);
definechar(13,"t'ung jen",1,1,1,1,0,1);
definechar(14,"ta yu",1,0,1,1,1,1);
definechar(15,"ch'ien",0,0,0,1,0,0);
definechar(16,"yu",0,0,1,0,0,0);
definechar(17,"sui",0,1,1,0,0,1);
definechar(18,"ku",1,0,0,1,1,0);
definechar(19,"lin",0,0,0,0,1,0);
definechar(20,"kuan",1,1,0,0,0,0);
definechar(21,"shih ho",1,0,1,0,0,1);
definechar(22,"pi",1,0,0,1,0,1);
definechar(23,"po",1,0,0,0,0,0);
definechar(24,"fu",0,0,0,0,0,1);
definechar(25,"wu wang",1,1,1,0,0,1);
definechar(26,"ta ch'u",1,0,0,1,1,1);
definechar(27,"i",1,0,0,0,0,1);
definechar(28,"ta kuo",0,1,1,1,1,0);
definechar(29,"k'an",0,1,0,0,1,0);
definechar(30,"li",1,0,1,1,0,1);
definechar(31,"hsien",0,1,1,1,0,0);
definechar(32,"heng",0,0,1,1,1,0);
definechar(33,"tun",1,1,1,1,0,0);
definechar(34,"ta chuang",0,0,1,1,1,1);
definechar(35,"chin",1,0,1,0,0,0);
definechar(36,"ming i",0,0,0,1,0,1);
definechar(37,"chia jen",1,1,0,1,0,1);
definechar(38,"k'uei",1,0,1,0,1,1);
definechar(39,"chien",0,1,0,1,0,0);
definechar(40,"hsieh",0,0,1,0,1,0);
definechar(41,"sun",1,0,0,0,1,1);
definechar(42,"i",1,1,0,0,0,1);
definechar(43,"kuai",0,1,1,1,1,1);
definechar(44,"kou",1,1,1,1,1,0);
definechar(45,"ts'ui",0,1,1,0,0,0);
definechar(46,"sheng",0,0,0,1,1,0);
definechar(47,"k'un",0,1,1,0,1,0);
definechar(48,"ching",0,1,0,1,1,0);
definechar(49,"ko",0,1,1,1,0,1);
definechar(50,"ting",1,0,1,1,1,0);
definechar(51,"chen",0,0,1,0,0,1);
definechar(52,"ken",1,0,0,1,0,0);
definechar(53,"chien",1,1,0,1,0,0);
definechar(54,"kuei mei",0,0,1,0,1,1);
definechar(55,"feng",0,0,1,1,0,1);
definechar(56,"lu",1,0,1,1,0,0);
definechar(57,"sun",1,1,0,1,1,0);
definechar(58,"tui",0,1,1,0,1,1);
definechar(59,"huan",1,1,0,0,1,0);
definechar(60,"chieh",0,1,0,0,1,1);
definechar(61,"chung fu",1,1,0,0,1,1);
definechar(62,"hsiao kuo",0,0,1,1,0,0);
definechar(63,"chi chi",0,1,0,1,0,1);
definechar(64,"wei chi",1,0,1,0,1,0);
%
%
%
%  Chinese characters
%
beginchar(65,narrowwidth#,height#,0);"ch'ien";
brush(15,45,12,27);
brush(8,32,21,37);
brush(9,26,21,32);
brush(8,28,9,18);
brush(9,18,12,17);
brush(12,17,18,20);
brush(18,20,21,32);
brush(9,18,18,25);
brush(13,17,15,0);
brush(0,7,20,17);
brush(27,40,23,22);
brush(25,28,35,33);
brush(20,20,32,27);
brush(32,27,22,5);
brush(22,5,37,5);
brush(37,5,37,14);
endchar;
beginchar(66,narrowwidth#,height#,0);"k'un";
brush(0,27,13,32);
brush(1,15,16,27);
brush(8,40,10,22);
brush(15,30,18,20);
brush(22,44,24,0);
brush(20,28,30,34);
brush(20,23,30,28);
brush(20,18,30,22);
brush(30,22,30,34);
endchar;
beginchar(67,narrowwidth#,height#,0);"chun";
brush(0,27,19,33);
brush(25,0,25,15);
brush(0,12,4,20);
brush(0,12,18,22);
brush(12,14,17,25);
getbrush(15,40,30,0);
draw (mg*15,mg*40){down} .. (mg*15,mg*10) .. (mg*30,0);
endchar;
beginchar(68,narrowwidth#,height#,0);"meng";
brush(10,32,11,40);
brush(16,32,18,40);
brush(8,33,21,35);
brush(4,27,24,30);
brush(0,20,3,30);
brush(10,22,20,24);
brush(20,24,24,30);
brush(5,19,15,20);
brush(4,11,15,20);
brush(5,8,12,12);
brush(7,7,15,0);
brush(15,0,16,10);
brush(6,1,21,17);
brush(12,17,28,2);
endchar;
beginchar(69,narrowwidth#,height#,0);"hsu";
brush(0,20,2,31);
brush(4,0,5,13);
brush(3,27,25,35);
brush(25,35,22,26);
brush(8,39,22,42);
brush(12,20,15,40);
brush(6,20,10,26);
brush(10,26,6,29);
brush(13,25,21,28);
brush(21,28,18,31);
brush(7,18,19,21);
brush(6,12,15,19);
brush(6,12,23,20);
brush(23,20,20,2);
brush(22,0,15,5);
brush(15,5,17,17);
brush(11,5,12,14);
endchar;
beginchar(70,narrowwidth#,height#,0);"sung";
brush(11,34,13,30);
brush(0,22,19,28);
brush(5,19,14,21);
brush(5,15,13,17);
brush(1,10,10,0);
brush(7,6,15,10);
brush(10,0,20,7);
brush(20,7,25,17);
brush(20,4,24,7);
brush(17,17,21,21);
brush(21,21,19,25);
brush(25,11,31,5);
brush(23,26,32,20);
brush(15,10,17,5);
endchar;
beginchar(71,narrowwidth#,height#,0);"shih";
brush(0,28,10,39);
brush(6,30,7,13);
brush(8,19,13,21);
brush(13,21,10,13);
brush(10,13,15,16);
brush(7,20,12,32);
brush(11,30,6,29);
brush(10,25,6,22);
brush(16,22,18,13);
brush(17,19,28,23);
brush(20,27,22,0);
brush(20,27,27,30);
brush(21,12,25,10);
brush(28,22,25,10);
endchar;
beginchar(72,narrowwidth#,height#,0);"pi";
brush(0,7,0,21);
brush(0,7,10,12);
brush(0,15,8,20);
brush(33,4,32,10);
brush(12,12,27,22);
getbrush(22,30,38,4);
draw (22*mg,30*mg){down} .. (25*mg,5*mg) .. (38*mg,4*mg){right};
endchar;
beginchar(73,narrowwidth#,bigheight#,0);"hsiao ch'u";
brush(0,46,7,55);
brush(10,52,17,48);
brush(17,48,13,66);
brush(27,55,30,50);
brush(3,22,23,28);
brush(11,31,18,27);
brush(17,26,11,18);
brush(20,13,11,12);
brush(11,18,20,18);
brush(20,18,21,12);
brush(10,11,20,20);
brush(6,10,8,0);
brush(8,0,20,1);
brush(20,1,22,10);
brush(22,10,8,8);
brush(15,1,13,9);
brush(8,4,21,5);
endchar;
beginchar(74,narrowwidth#,height#,0);"li";
brush(0,5,8,20);
brush(8,20,9,30);
brush(8,20,13,23);
brush(10,3,11,12);
brush(7,12,17,20);
brush(17,20,19,27);
brush(11,28,23,30);
brush(11,35,27,35);
brush(21,29,23,34);
brush(20,26,20,12);
brush(20,25,26,28);
brush(20,22,26,23);
brush(20,18,25,20);
brush(20,16,25,18);
brush(20,12,24,14);
brush(17,7,20,12);
brush(20,12,35,0);
brush(19,3,22,7);
brush(22,7,26,23);
endchar;
beginchar(75,narrowwidth#,height#,0);"t'ai";
brush(1,8,13,20);
brush(13,20,18,40);
brush(0,18,27,20);
brush(10,25,20,27);
brush(9,30,20,31);
brush(19,20,30,12);
brush(7,1,15,9);
brush(10,3,16,0);
brush(9,10,12,9);
brush(15,15,17,2);
brush(18,8,21,12);
brush(18,8,28,2);
endchar;
beginchar(76,narrowwidth#,height#,0);"p'i";
brush(0,28,25,32);
brush(3,17,18,30);
brush(16,30,17,15);
brush(20,25,25,21);
brush(7,10,10,0);
brush(10,0,22,3);
brush(20,0,26,12);
brush(8,7,25,11);
endchar;
beginchar(77,narrowwidth#,bigheight#,0);"t'ung jen";
brush(0,4,20,26);
brush(10,13,30,0);
brush(6,40,9,58);
brush(8,55,29,60);
brush(30,60,27,35);
brush(28,36,20,37);
brush(10,45,12,39);
brush(10,49,22,52);
brush(12,43,22,47);
brush(22,47,18,40);
brush(13,40,21,41);
endchar;
beginchar(78,narrowwidth#,bigheight#,0);"ta yu";
brush(8,52,23,81);
brush(10,68,30,70);
brush(18,68,36,52);
brush(0,11,23,37);
brush(6,28,27,31);
brush(17,26,18,3);
brush(17,21,23,22);
brush(18,17,23,18);
brush(19,10,22,11);
brush(23,22,24,0);
brush(24,0,20,0);
endchar;
beginchar(79,narrowwidth#,height#,0);"ch'ien";
brush(10,29,13,31);
brush(13,31,9,33);
brush(0,22,17,27);
brush(4,17,10,20);
brush(6,13,11,15);
brush(0,10,5,0);
brush(5,0,10,3);
brush(10,3,12,10);
brush(12,10,3,6);
brush(20,30,22,28);
brush(23,26,30,32);
brush(20,22,26,23);
brush(21,22,21,0);
brush(11,2,20,8);
brush(20,10,32,4);
brush(19,18,30,21);
brush(19,17,29,19);
brush(20,12,29,16);
brush(29,16,30,21);
brush(25,23,26,2);
endchar;
beginchar(80,narrowwidth#,height#,0);"yu";
brush(0,13,14,19);
brush(14,19,9,22);
brush(10,22,15,28);
brush(17,29,5,25);
brush(7,3,11,0);
brush(11,0,10,16);
brush(21,26,24,33);
brush(23,29,27,30);
brush(27,30,25,27);
brush(18,23,20,18);
brush(21,27,23,21);
brush(21,20,26,20);
brush(26,20,30,24);
brush(30,24,22,22);
brush(19,15,24,18);
brush(18,12,25,17);
brush(19,9,23,12);
brush(18,0,26,10);
brush(27,11,30,14);
brush(24,14,28,2);
brush(28,2,23,2);
brush(27,10,40,6);
endchar;
beginchar(81,narrowwidth#,height#,0);"sui";
brush(0,28,3,2);
brush(0,33,12,38);
brush(1,23,8,20);
brush(13,23,21,40);
brush(16,33,25,37);
brush(18,30,27,33);
brush(22,31,22,26);
brush(17,22,27,28);
brush(9,18,18,20);
brush(19,6,20,20);
brush(20,20,25,22);
brush(25,22,26,8);
brush(26,8,23,10);
brush(20,16,26,19);
brush(20,13,26,15);
brush(12,16,12,4);
getbrush(15,3,40,3);
draw flex((15*mg,3*mg),(22*mg,5*mg),(32*mg,0),(40*mg,3*mg));
getbrush(12,20,13,33);
draw (12*mg,20*mg){-1,2} .. (13*mg,33*mg){1,2};
endchar;
beginchar(82,narrowwidth#,height#,0);"ku";
brush(13,42,18,37);
brush(15,36,23,38);
brush(23,38,30,47);
brush(15,40,28,45);
brush(21,48,20,33);
brush(13,32,28,35);
brush(2,26,8,20);
brush(8,20,15,22);
brush(15,20,17,30);
brush(4,25,15,27);
brush(10,30,10,20);
brush(3,15,14,20);
brush(14,20,17,18);
brush(17,18,30,20);
brush(27,20,27,34);
brush(20,28,23,24);
brush(23,24,30,27);
brush(30,27,32,31);
brush(32,31,20,28);
brush(31,23,34,20);
brush(0,0,33,7);
brush(8,11,30,18);
brush(8,11,11,3);
brush(18,12,20,5);
brush(23,14,22,6);
brush(30,18,28,6);
endchar;
beginchar(83,narrowwidth#,height#,0);"lin";
brush(1,6,1,20);
brush(1,22,13,27);
brush(1,16,10,20);
brush(10,20,10,26);
brush(1,12,13,16);
brush(8,7,13,13);
brush(7,10,13,23);
brush(0,1,25,11);
brush(15,0,17,12);
brush(20,3,22,10);
brush(20,18,26,19);
brush(20,18,19,21);
brush(27,19,30,24);
brush(20,20,30,24);
brush(20,25,21,35);
brush(20,29,30,32);
brush(25,25,27,31);
brush(29,5,28,13);
brush(29,5,37,6);
brush(35,6,37,14);
brush(28,12,37,14);
brush(20,3,25,5);
endchar;
beginchar(84,narrowwidth#,height#,0);"kuan";
brush(0,32,15,37);
brush(5,29,5,38);
brush(9,32,10,41);
brush(0,28,7,29);
brush(0,28,3,20);
brush(2,24,11,31);
brush(4,17,6,29);
brush(0,11,13,26);
brush(12,24,12,31);
brush(11,15,8,29);
brush(11,15,10,3);
brush(5,0,6,15);
brush(6,14,13,20);
brush(7,1,12,6);
brush(7,7,12,12);
brush(8,11,22,22);
brush(12,10,22,12);
brush(12,0,22,12);
brush(17,11,16,23);
brush(18,23,22,27);
brush(20,30,24,33);
brush(24,33,24,2);
brush(24,2,35,0);
brush(35,0,32,12);
endchar;
beginchar(85,narrowwidth#,bigheight#,0);"shih ho";
brush(9,0,35,3);
brush(19,1,15,10);
brush(22,2,20,11);
brush(25,2,27,12);
brush(28,3,33,13);
brush(15,10,30,12);
brush(20,12,28,18);
brush(18,13,27,20);
brush(27,20,32,17);
brush(24,19,25,37);
brush(18,20,30,22);
brush(20,29,30,31);
brush(0,14,0,24);
brush(0,20,11,23);
brush(11,23,6,11);
brush(6,11,13,17);
brush(5,60,3,70);
brush(4,65,15,72);
brush(13,71,10,60);
brush(15,50,40,51);
brush(27,50,28,68);
brush(22,67,34,69);
brush(20,58,27,65);
brush(23,62,27,60);
brush(27,60,32,67);
brush(30,63,35,57);
brush(21,70,22,80);
brush(21,73,28,73);
brush(22,77,30,80);
brush(32,70,34,80);
brush(33,75,40,78);
brush(34,76,38,70);
endchar;
beginchar(86,narrowwidth#,height#,0);"pi";
brush(1,5,15,10);
brush(15,10,9,0);
brush(14,8,27,3);
brush(9,10,10,20);
brush(10,20,20,22);
brush(8,12,19,15);
brush(9,15,19,19);
brush(19,21,20,10);
brush(10,20,8,30);
brush(0,25,25,30);
brush(16,21,20,30);
brush(15,30,15,40);
brush(8,34,20,37);
endchar;
beginchar(87,narrowwidth#,height#,0);"po";
brush(0,25,10,32);
brush(0,25,13,25);
brush(10,29,13,26);
brush(13,26,7,20);
brush(0,16,12,20);
brush(8,21,8,7);
brush(8,6,6,8);
brush(0,7,18,20);
brush(18,20,19,15);
brush(2,15,14,10);
brush(19,7,26,0);
brush(26,0,23,30);
endchar;
beginchar(88,narrowwidth#,height#,0);"fu";
brush(0,12,10,22);
brush(0,20,10,30);
brush(8,4,8,17);
brush(19,33,16,28);
brush(16,29,30,33);
brush(20,15,20,27);
brush(20,26,27,29);
brush(20,20,26,23);
brush(20,16,26,19);
brush(26,19,27,29);
brush(16,4,24,16);
brush(22,12,28,13);
brush(22,12,30,0);
brush(27,0,37,0);
brush(19,2,29,15);
endchar;
beginchar(89,narrowwidth#,bigheight#,0);"wu wang";
brush(13,58,28,78);
brush(20,82,32,85);
brush(15,70,35,75);
brush(40,55,42,65);
brush(0,10,36,12);
brush(20,12,18,8);
brush(18,8,32,2);
brush(8,22,32,27);
brush(18,25,19,17);
brush(19,17,35,19);
brush(21,34,25,30);
getbrush(17,0,30,11);
draw (17*mg,0){right} .. (30*mg,11*mg){up};
getbrush(32,72,45,55);
draw (32*mg,72*mg){down} .. (35*mg,55*mg) .. (45*mg,55*mg);
endchar;
beginchar(90,narrowwidth#,bigheight#,0);"ta ch'u";
brush(3,70,21,77);
brush(12,70,32,59);
brush(17,42,21,38);
brush(0,27,30,36);
brush(21,32,10,22);
brush(9,20,22,23);
brush(22,23,10,15);
brush(10,15,30,20);
brush(24,18,20,22);
brush(9,10,13,0);
brush(13,0,26,3);
brush(25,0,29,13);
brush(10,9,28,12);
brush(11,3,23,8);
brush(20,2,20,11);
getbrush(5,57,14,88);
draw (5*mg,57*mg){1,1} .. (17*mg,70*mg) .. (14*mg,88*mg){up};
endchar;
beginchar(91,narrowwidth#,height#,0);"i";
brush(0,27,16,31);
brush(10,29,7,22);
brush(0,20,14,23);
brush(0,5,1,20);
brush(0,5,11,11);
brush(1,15,10,17);
brush(5,20,7,17);
brush(7,17,12,23);
brush(9,7,23,11);
brush(23,11,17,3);
brush(22,8,34,0);
brush(18,9,18,22);
brush(18,22,30,24);
brush(30,24,27,6);
brush(18,13,24,15);
brush(18,17,25,19);
brush(23,21,25,29);
brush(19,29,30,31);
brush(7,9,8,16);
endchar;
beginchar(92,narrowwidth#,bigheight#,0);"ta kuo";
getbrush(5,43,24,77);
draw flex((5*mg,43*mg),(22*mg,50*mg),(24*mg,77*mg));
brush(6,60,30,64);
brush(17,50,33,45);
brush(0,0,36,3);
brush(10,20,5,21);
brush(5,13,10,12);
brush(10,12,8,1);
brush(15,17,18,7);
brush(30,3,30,20);
brush(30,18,18,13);
brush(21,6,21,10);
brush(21,10,25,12);
brush(25,12,27,9);
brush(27,9,21,6);
brush(23,17,24,22);
brush(20,19,28,23);
brush(28,21,29,31);
brush(29,31,20,24);
brush(20,19,18,30);
endchar;
beginchar(93,narrowwidth#,height#,0);"k'an";
brush(0,10,18,22);
brush(7,16,8,32);
brush(1,19,13,24);
brush(18,21,20,33);
brush(18,23,29,25);
brush(29,25,22,19);
brush(20,20,10,3);
brush(19,12,36,0);
endchar;
beginchar(94,biggerwidth#,height#,0);"li";
brush(0,5,21,17);
brush(21,16,20,0);
brush(20,1,18,2);
brush(8,12,9,5);
brush(15,16,14,6);
brush(13,6,18,10);
brush(18,10,15,12);
brush(10,18,9,24);
brush(10,18,19,22);
brush(20,22,21,30);
brush(10,22,20,32);
brush(19,24,7,30);
brush(7,30,23,34);
brush(19,32,16,41);
brush(22,22,29,37);
brush(26,0,26,25);
brush(33,7,33,24);
brush(29,6,45,7);
brush(29,12,39,14);
brush(29,19,40,20);
brush(29,22,41,27);
brush(38,25,35,32);
endchar;
beginchar(95,narrowwidth#,height#,0);"hsien";
brush(0,6,4,22);
brush(2,17,15,23);
brush(8,16,11,4);
brush(8,15,16,17);
brush(16,17,10,9);
brush(13,10,25,23);
brush(26,15,27,0);
brush(27,0,15,44);
brush(5,28,27,32);
brush(28,35,26,41);
endchar;
beginchar(96,narrowwidth#,height#,0);"heng";
brush(0,12,0,24);
brush(0,13,10,21);
brush(8,0,8,36);
brush(12,4,37,9);
brush(24,7,34,30);
brush(27,13,18,11);
brush(18,11,27,35);
brush(18,30,30,37);
brush(20,20,28,18);
brush(22,23,32,29);
endchar;
beginchar(97,narrowwidth#,height#,0);"tun";
brush(0,4,36,0);
brush(0,4,4,15);
brush(4,15,0,16);
brush(0,28,8,19);
brush(7,8,15,32);
brush(12,12,17,8);
brush(17,8,20,34);
brush(12,20,18,22);
brush(13,25,19,25);
brush(18,10,28,18);
brush(20,17,29,22);
brush(22,24,31,31);
brush(22,30,31,32);
brush(29,22,25,24);
brush(29,22,29,4);
brush(29,4,25,10);
brush(29,17,34,12);
brush(29,17,37,25);
endchar;
beginchar(98,narrowwidth#,bigheight#,0);"ta chuang";
brush(0,47,15,63);
brush(15,63,20,77);
brush(5,61,25,67);
brush(15,63,31,49);
brush(0,10,13,17);
brush(3,2,10,15);
brush(15,0,12,35);
brush(7,31,5,18);
brush(5,18,10,21);
brush(19,19,34,22);
brush(21,5,34,9);
brush(28,8,26,31);
endchar;
beginchar(99,narrowwidth#,height#,0);"chin";
brush(0,20,35,25);
brush(17,0,15,19);
brush(25,5,26,20);
brush(26,20,17,16);
brush(25,14,17,10);
brush(25,10,17,5);
brush(8,37,28,40);
brush(18,37,10,28);
brush(10,28,20,32);
brush(18,34,21,29);
brush(22,30,26,37);
brush(26,37,29,32);
brush(24,29,30,32);
endchar;
beginchar(100,narrowwidth#,bigheight#,0);"ming i";
getbrush(5,0,23,45);
draw flex((5*mg,0),(20*mg,20*mg),(23*mg,45*mg));
getbrush(17,55,30,84);
draw flex((17*mg,55*mg),(25*mg,63*mg),(30*mg,84*mg));
brush(11,17,32,0);
brush(4,14,8,20);
brush(5,15,31,22);
brush(31,22,27,10);
brush(27,10,23,13);
brush(6,20,21,25);
brush(20,24,27,32);
brush(27,32,9,29);
brush(5,33,28,40);
brush(6,60,4,78);
brush(15,63,17,79);
brush(7,62,14,65);
brush(7,66,15,70);
brush(6,70,15,77);
brush(22,68,31,70);
brush(24,72,31,76);
brush(27,62,31,59);
brush(31,59,31,87);
brush(28,85,33,88);
endchar;
beginchar(101,narrowwidth#,bigheight#,0);"chia jen";
brush(0,0,12,12);
brush(12,12,20,29);
brush(12,12,32,0);
brush(5,60,7,68);
brush(15,79,20,72);
brush(8,66,30,70);
brush(26,72,30,68);
brush(10,62,20,64);
brush(20,64,10,57);
brush(10,49,22,58);
brush(8,40,28,60);
brush(10,46,20,42);
brush(22,50,36,46);
getbrush(25,42,22,60);
draw flex((mg*25,mg*42),(mg*27,mg*50),(mg*22,mg*60));
endchar;
beginchar(102,biggerwidth#,height#,0);"k'uei";
brush(0,9,0,27);
brush(0,9,2,11);
brush(0,15,9,18);
brush(0,18,9,20);
brush(8,10,10,29);
brush(10,16,22,30);
brush(15,30,25,30);
brush(12,27,17,23);
brush(10,10,22,14);
brush(15,16,24,18);
brush(19,0,20,18);
brush(20,10,30,0);
brush(25,26,30,30);
brush(30,25,25,20);
brush(25,20,33,15);
brush(33,15,40,17);
brush(10,29,4,27);
endchar;
beginchar(103,narrowwidth#,height#,0);"chien";
brush(19,42,19,48);
brush(4,29,5,36);
brush(5,34,25,41);
brush(10,31,22,35);
brush(22,35,29,40);
brush(10,28,22,31);
brush(15,25,12,36);
brush(18,26,18,36);
brush(0,22,25,27);
brush(0,6,16,22);
brush(9,0,13,10);
brush(8,5,27,0);
brush(27,0,33,0);
brush(18,5,18,14);
brush(13,10,11,18);
brush(12,13,24,20);
brush(24,20,12,17);
brush(20,22,32,18);
brush(18,11,23,13);
endchar;
beginchar(104,narrowwidth#,height#,0);"hsieh";
brush(25,27,27,0);
brush(25,30,29,38);
brush(29,38,18,33);
brush(20,29,22,35);
brush(18,21,26,27);
brush(20,17,19,21);
brush(15,15,29,20);
brush(15,8,15,28);
brush(11,10,15,8);
brush(0,5,5,23);
brush(5,10,10,15);
brush(10,15,10,25);
brush(6,16,15,22);
brush(5,21,15,28);
brush(3,29,10,41);
brush(5,33,12,36);
brush(12,36,7,28);
endchar;
beginchar(105,narrowwidth#,height#,0);"sun";
brush(0,11,12,28);
brush(1,27,12,32);
brush(8,16,12,9);
brush(12,9,10,39);
brush(15,0,26,15);
brush(28,13,36,7);
brush(26,15,20,12);
brush(28,13,30,34);
brush(20,12,20,30);
brush(20,30,30,34);
brush(20,19,30,23);
brush(20,22,30,27);
brush(20,42,22,37);
brush(22,37,32,39);
brush(22,37,32,45);
brush(32,45,21,40);
endchar;
beginchar(106,narrowwidth#,height#,0);"i";
brush(0,0,35,7);
brush(15,4,12,12);
brush(12,12,30,17);
brush(30,17,29,8);
brush(19,13,21,5);
brush(21,5,25,15);
brush(10,17,20,27);
brush(25,27,30,21);
brush(7,27,35,31);
brush(18,30,15,37);
brush(23,32,30,41);
endchar;
beginchar(107,narrowwidth#,height#,0);"kuai";
brush(0,12,30,22);
brush(22,20,26,30);
brush(26,30,10,16);
brush(20,15,32,8);
getbrush(8,0,15,40);
draw flex ((8*mg,0),(17*mg,19*mg),(15*mg,40*mg));
endchar;
beginchar(108,narrowwidth#,height#,0);"kou";
brush(15,3,20,20);
brush(20,20,26,31);
brush(20,15,30,20);
brush(15,3,22,12);
brush(22,12,25,0);
brush(25,0,33,3);
brush(27,2,32,12);
brush(32,12,23,8);
brush(8,13,15,5);
brush(5,10,10,17);
brush(10,17,10,33);
brush(0,16,15,20);
getbrush(14,20,6,3);
draw flex((14*mg,20*mg),(11*mg,5*mg),(6*mg,3*mg));
endchar;
beginchar(109,narrowwidth#,height#,0);"ts'ui";
brush(16,46,18,38);
brush(12,41,17,42);
brush(26,50,22,38);
brush(20,42,27,44);
brush(20,38,23,35);
brush(23,35,10,32);
brush(9,23,17,33);
brush(15,30,20,27);
brush(20,26,24,32);
brush(22,28,27,22);
brush(0,15,31,17);
brush(20,0,19,21);
endchar;
beginchar(110,narrowwidth#,height#,0);"sheng";
brush(20,0,21,40);
brush(0,18,27,27);
brush(6,10,13,21);
brush(13,21,12,24);
brush(7,24,16,32);
endchar;
beginchar(111,narrowwidth#,height#,0);"k'un";
brush(0,30,1,5);
brush(9,34,36,45);
brush(36,45,35,0);
brush(35,0,25,8);
brush(27,10,10,3);
brush(20,8,18,33);
brush(7,22,23,32);
brush(10,13,20,22);
brush(20,22,25,18);
endchar;
beginchar(112,narrowwidth#,height#,0);"ching";
brush(20,0,23,63);
brush(0,28,35,40);
brush(5,44,30,50);
getbrush(10,20,15,53);
draw (mg*10,mg*20){right} .. (mg*14,mg*30) .. (mg*15,mg*53){up};
endchar;
beginchar(113,narrowwidth#,height#,0);"ko";
brush(0,10,35,18);
brush(22,0,21,32);
brush(11,18,28,26);
brush(8,25,15,20);
brush(11,21,28,30);
brush(20,30,16,41);
brush(19,31,25,33);
brush(25,37,27,43);
brush(8,35,35,41);
endchar;
beginchar(114,narrowwidth#,height#,0);"ting";
brush(6,0,8,10);
brush(0,6,12,12);
brush(8,15,9,25);
brush(8,17,19,21);
brush(17,20,17,5);
brush(21,24,22,4);
brush(22,12,31,18);
brush(29,16,31,0);
brush(21,20,30,23);
brush(30,23,30,31);
brush(15,38,16,25);
brush(16,25,24,30);
brush(24,30,25,42);
brush(20,40,27,43);
brush(17,29,24,33);
brush(17,33,24,37);
endchar;
beginchar(115,narrowwidth#,height#,0);"chen";
brush(10,41,27,46);
brush(0,23,7,33);
brush(6,31,30,39);
brush(17,25,17,41);
brush(8,22,12,28);
brush(12,28,10,30);
brush(22,32,18,28);
brush(18,28,22,27);
brush(23,30,31,37);
brush(0,1,10,20);
brush(7,19,22,22);
brush(9,18,19,20);
brush(6,12,17,16);
brush(10,0,10,13);
brush(10,13,30,6);
brush(10,2,23,14);
endchar;
beginchar(116,narrowwidth#,height#,0);"ken";
brush(0,0,11,11);
brush(4,7,4,30);
brush(4,19,30,4);
brush(15,16,25,25);
brush(5,19,23,27);
brush(23,27,20,42);
brush(20,40,4,35);
brush(4,26,18,33);
endchar;
beginchar(117,narrowwidth#,height#,0);"chien";
brush(0,25,3,12);
brush(3,12,10,36);
brush(0,39,6,37);
brush(7,47,10,43);
brush(19,49,20,10);
brush(12,41,22,47);
brush(9,19,37,32);
brush(28,30,26,32);
brush(26,32,36,41);
brush(36,31,35,0);
brush(25,15,28,28);
brush(12,36,13,27);
brush(13,27,23,30);
brush(23,30,24,37);
brush(12,30,22,33);
brush(12,33,22,37);
endchar;
beginchar(118,biggerwidth#,bigheight#,0);"kuei mei";
brush(0,30,2,28);
brush(2,28,17,30);
brush(7,22,18,10);
brush(10,0,26,20);
brush(25,13,27,6);
brush(27,6,26,44);
brush(27,18,44,10);
brush(20,21,34,30);
brush(22,30,30,35);
brush(7,22,13,38);
brush(3,13,10,19);
brush(10,19,17,30);
brush(0,59,11,64);
brush(6,60,10,90);
brush(1,80,15,95);
brush(9,84,20,86);
brush(20,86,9,77);
brush(9,77,20,77);
brush(20,77,8,70);
brush(6,65,12,69);
brush(20,61,20,73);
brush(20,77,34,80);
brush(25,50,27,71);
brush(20,64,37,71);
brush(37,71,28,60);
brush(28,70,35,79);
brush(25,82,32,86);
brush(24,85,32,90);
brush(25,90,32,93);
brush(32,93,32,86);
endchar;
beginchar(119,narrowwidth#,height#,0);"feng";
brush(0,29,5,19);
brush(5,19,25,27);
brush(24,26,28,32);
brush(28,32,19,29);
brush(22,25,22,40);
brush(18,23,17,42);
brush(9,20,9,40);
brush(5,22,15,30);
brush(7,29,12,32);
brush(8,35,14,38);
brush(18,32,25,35);
brush(18,35,25,38);
brush(18,38,25,41);
brush(10,19,20,21);
brush(10,10,9,15);
brush(10,12,22,18);
brush(22,18,18,12);
brush(18,12,22,12);
brush(22,12,18,5);
brush(9,7,16,7);
brush(3,0,28,4);
endchar;
beginchar(120,biggerwidth#,height#,0);"lu";
brush(1,2,15,23);
brush(0,15,15,23);
brush(15,23,8,30);
brush(10,18,12,2);
brush(12,2,10,4);
brush(16,20,22,31);
brush(18,25,30,32);
brush(18,2,20,20);
brush(20,20,30,26);
brush(20,18,30,22);
brush(25,0,25,20);
brush(27,2,34,19);
brush(28,15,44,3);
endchar;
beginchar(121,narrowwidth#,height#,0);"sun";
brush(10,38,20,40);
brush(20,40,19,35);
brush(20,35,11,32);
brush(11,33,12,28);
brush(12,28,20,30);
brush(27,40,32,40);
brush(32,40,28,34);
brush(28,34,25,34);
brush(25,34,25,28);
brush(25,28,30,28);
brush(18,16,20,24);
brush(25,16,27,24);
brush(15,20,28,22);
brush(0,10,33,15);
brush(10,0,21,10);
brush(25,9,32,0);
endchar;
beginchar(122,narrowwidth#,height#,0);"tui";
brush(0,0,12,17);
brush(12,17,18,2);
brush(18,2,30,0);
brush(30,1,31,6);
brush(4,24,5,17);
brush(5,18,15,22);
brush(14,20,18,30);
brush(18,30,5,22);
brush(5,35,8,30);
brush(10,31,19,43);
endchar;
beginchar(123,narrowwidth#,height#,0);"huan";
brush(1,10,6,0);
brush(5,2,10,20);
brush(0,28,5,23);
brush(7,41,10,37);
brush(10,8,40,14);
brush(28,6,40,0);
brush(18,0,32,27);
brush(25,21,29,19);
brush(20,15,26,25);
brush(20,15,18,21);
brush(19,18,21,22);
brush(21,22,32,27);
brush(18,22,21,37);
brush(21,31,28,33);
brush(28,33,23,24);
endchar;
beginchar(124,narrowwidth#,height#,0);"chieh";
brush(9,40,10,52);
brush(17,44,10,47);
brush(10,47,17,52);
brush(22,42,22,53);
brush(29,48,22,50);
brush(22,50,29,55);
brush(0,36,20,41);
brush(7,20,7,37);
brush(7,32,16,36);
brush(7,28,16,32);
brush(16,30,16,40);
brush(4,13,14,23);
brush(11,26,17,21);
brush(23,0,20,34);
brush(20,34,28,40);
brush(28,40,28,27);
brush(28,27,21,29);
endchar;
beginchar(125,biggerwidth#,bigheight#,0);"chung fu";
brush(0,15,45,20);
brush(18,0,22,0);
brush(22,0,26,18);
brush(26,18,20,24);
brush(18,22,25,29);
brush(9,27,29,30);
brush(10,36,30,50);
brush(12,36,15,31);
brush(15,31,22,39);
brush(22,39,24,34);
brush(22,32,32,43);
brush(23,70,27,110);
brush(10,100,16,84);
brush(15,90,38,98);
brush(20,83,35,95);
brush(20,83,32,88);
endchar;
beginchar(126,narrowwidth#,bigheight#,0);"hsiao kuo";
brush(3,57,7,63);
brush(13,66,21,58);
brush(21,58,20,80);
brush(30,66,36,58);
brush(0,22,9,24);
brush(4,17,8,18);
brush(8,18,7,8);
brush(13,19,14,8);
brush(18,22,19,36);
brush(19,30,28,38);
brush(28,38,25,23);
brush(21,21,22,29);
brush(22,29,27,31);
brush(18,17,30,20);
brush(30,20,28,8);
brush(20,12,21,8);
brush(21,8,24,10);
brush(24,10,25,16);
brush(25,16,21,12);
getbrush(0,0,32,2);
draw flex((0,0),(mg*10,mg*5),(mg*20,0),(mg*32,mg*2));
endchar;
beginchar(127,biggerwidth#,bigheight#,0);"chi chi";
brush(0,89,8,99);
brush(5,87,5,78);
brush(5,78,15,83);
brush(15,80,17,91);
brush(17,91,6,87);
brush(6,83,13,85);
brush(22,86,31,90);
brush(8,65,9,72);
brush(9,72,15,75);
brush(8,66,15,72);
brush(16,60,26,74);
brush(26,74,29,84);
brush(21,78,20,72);
brush(20,75,34,82);
brush(30,77,30,64);
brush(30,64,44,59);
brush(44,59,46,67);
brush(9,18,11,0);
brush(11,0,20,26);
brush(9,30,14,26);
brush(10,40,19,36);
brush(23,36,38,41);
brush(36,40,32,43);
brush(23,29,30,30);
brush(23,24,25,30);
brush(30,30,35,36);
brush(26,22,32,30);
brush(30,24,36,22);
brush(36,22,34,32);
brush(36,28,41,32);
brush(38,30,45,23);
brush(40,28,44,32);
brush(28,0,28,17);
brush(28,13,40,19);
brush(40,21,41,2);
brush(30,8,40,12);
endchar;
beginchar(128,biggerwidth#,bigheight#,0);"wei chi";
brush(20,60,20,105);
brush(0,60,20,78);
brush(20,78,36,70);
brush(4,72,27,94);
brush(8,87,27,100);
brush(0,27,6,24);
brush(7,40,10,34);
brush(7,8,13,28);
brush(10,28,18,30);
brush(14,22,22,30);
brush(22,30,13,34);
brush(13,34,30,44);
brush(25,43,20,49);
brush(20,22,25,30);
brush(23,35,27,33);
brush(25,27,30,40);
brush(26,31,38,38);
brush(30,32,36,30);
brush(19,3,20,19);
brush(19,6,30,12);
brush(20,12,30,18);
brush(29,22,31,0);
endchar;

%
%
% Change line markers
%
beginchar(201,thinwidth#,height#,0); "First change line";
getthinpen;
fill fullcircle scaled thinwidth#;
draw fullcircle scaled thinwidth# shifted (0,mg*10);
draw fullcircle scaled thinwidth# shifted (0,mg*20);
draw fullcircle scaled thinwidth# shifted (0,mg*30);
draw fullcircle scaled thinwidth# shifted (0,mg*40);
draw fullcircle scaled thinwidth# shifted (0,mg*50);
endchar;
%
beginchar(202,thinwidth#,height#,0); "Second change line";
getthinpen;
draw fullcircle scaled thinwidth#;
fill fullcircle scaled thinwidth# shifted (0,mg*10);
draw fullcircle scaled thinwidth# shifted (0,mg*20);
draw fullcircle scaled thinwidth# shifted (0,mg*30);
draw fullcircle scaled thinwidth# shifted (0,mg*40);
draw fullcircle scaled thinwidth# shifted (0,mg*50);
endchar;
%
beginchar(203,thinwidth#,height#,0); "Third change line";
getthinpen;
draw fullcircle scaled thinwidth#;
draw fullcircle scaled thinwidth# shifted (0,mg*10);
fill fullcircle scaled thinwidth# shifted (0,mg*20);
draw fullcircle scaled thinwidth# shifted (0,mg*30);
draw fullcircle scaled thinwidth# shifted (0,mg*40);
draw fullcircle scaled thinwidth# shifted (0,mg*50);
endchar;
%
beginchar(204,thinwidth#,height#,0); "Fourth change line";
getthinpen;
draw fullcircle scaled thinwidth#;
draw fullcircle scaled thinwidth# shifted (0,mg*10);
draw fullcircle scaled thinwidth# shifted (0,mg*20);
fill fullcircle scaled thinwidth# shifted (0,mg*30);
draw fullcircle scaled thinwidth# shifted (0,mg*40);
draw fullcircle scaled thinwidth# shifted (0,mg*50);
endchar;
%
beginchar(205,thinwidth#,height#,0); "Fifth change line";
getthinpen;
draw fullcircle scaled thinwidth#;
draw fullcircle scaled thinwidth# shifted (0,mg*10);
draw fullcircle scaled thinwidth# shifted (0,mg*20);
draw fullcircle scaled thinwidth# shifted (0,mg*30);
fill fullcircle scaled thinwidth# shifted (0,mg*40);
draw fullcircle scaled thinwidth# shifted (0,mg*50);
endchar;
%
beginchar(206,thinwidth#,height#,0); "Sixth change line";
getthinpen;
draw fullcircle scaled thinwidth#;
draw fullcircle scaled thinwidth# shifted (0,mg*10);
draw fullcircle scaled thinwidth# shifted (0,mg*20);
draw fullcircle scaled thinwidth# shifted (0,mg*30);
draw fullcircle scaled thinwidth# shifted (0,mg*40);
fill fullcircle scaled thinwidth# shifted (0,mg*50);
endchar;
%
end
